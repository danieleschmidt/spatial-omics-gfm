[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "spatial-omics-gfm"
version = "0.1.0"
authors = [
    {name = "Daniel Schmidt", email = "daniel@spatial-omics.ai"},
]
description = "Graph Foundation Model for Spatial Transcriptomics Data"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = [
    "spatial-transcriptomics",
    "graph-neural-networks",
    "foundation-models",
    "bioinformatics",
    "single-cell",
]
dependencies = [
    "torch>=2.0.0",
    "torch-geometric>=2.3.0",
    "scanpy>=1.9.0",
    "squidpy>=1.2.0",
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "scipy>=1.9.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "h5py>=3.7.0",
    "zarr>=2.12.0",
    "anndata>=0.8.0",
    "tqdm>=4.64.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
gpu = [
    "torch[cuda]",
    "nvidia-ml-py",
]
viz = [
    "bokeh>=3.0.0",
    "ipywidgets>=8.0.0",
    "jupyter>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "nbsphinx>=0.9.0",
]
full = [
    "spatial-omics-gfm[gpu,viz,dev]",
]

[project.urls]
Homepage = "https://github.com/danielschmidt/spatial-omics-gfm"
Documentation = "https://spatial-omics-gfm.readthedocs.io"
Repository = "https://github.com/danielschmidt/spatial-omics-gfm"
"Bug Tracker" = "https://github.com/danielschmidt/spatial-omics-gfm/issues"

[project.scripts]
spatial-gfm = "spatial_omics_gfm.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["spatial_omics_gfm*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "__pycache__",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["F401", "F811"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torch_geometric.*",
    "scanpy.*",
    "squidpy.*",
    "plotly.*",
    "zarr.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=spatial_omics_gfm",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",       # ignore user warnings
    "ignore::DeprecationWarning", # ignore deprecation warnings
    "ignore::PendingDeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["spatial_omics_gfm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]